// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

generator typegraphql {
    provider = "typegraphql-prisma"
    output = "../prisma/generated/type-graphql"
    emitTransparentCode = true
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Enum_Rol {
    Estudiante
    Lider
    Administrador
}

enum Enum_EstadoUsuario {
    Pendiente
    Autorizado
    NoAutorizado
}

enum Enum_EstadoProyecto {
    Activo
    Inactivo
}

enum Enum_FaseProyecto {
    Iniciado
    Desarrollo
    Terminado
}

enum Enum_TipoObjetivo {
    General
    Especifico
}

enum Enum_EstadoInscripcion {
    Aceptada
    Rechazada
}

model Usuario {
    id                 String             @id @default(cuid())
    correo             String             @unique
    nombre             String
    apellido           String
    identificacion     String             @unique
    telefono           String?
    rol                Enum_Rol
    estado             Enum_EstadoUsuario
    proyectosLiderados Proyecto[]
    avancesCreados     Avance[]
    inscripciones      Inscripcion[]
}

model Proyecto {
    id            String              @id @default(cuid())
    nombre        String
    presupuesto   Float
    fechaInicio   DateTime
    fechaFin      DateTime
    lider         Usuario             @relation(fields: [usuarioId], references: [id])
    usuarioId     String
    estado        Enum_EstadoProyecto
    fase          Enum_FaseProyecto
    objetivos     Objetivo[]
    avances       Avance[]
    inscripciones Inscripcion[]
}

model Objetivo {
    id          String            @id @default(cuid())
    descripcion String
    tipo        Enum_TipoObjetivo
    proyecto    Proyecto          @relation(fields: [proyectoId], references: [id])
    proyectoId  String
}

model Avance {
    id            String   @id @default(cuid())
    fecha         DateTime
    descripcion   String
    observaciones String
    proyecto      Proyecto @relation(fields: [proyectoId], references: [id])
    proyectoId    String
    creadoPor     Usuario  @relation(fields: [usuarioId], references: [id])
    usuarioId     String
}

model Inscripcion {
    id           String                 @id @default(cuid())
    estado       Enum_EstadoInscripcion
    fechaIngreso DateTime
    fecjaEgreso  DateTime
    proyecto     Proyecto               @relation(fields: [proyectoId], references: [id])
    proyectoId   String
    estudiante   Usuario                @relation(fields: [usuarioId], references: [id])
    usuarioId    String
}
